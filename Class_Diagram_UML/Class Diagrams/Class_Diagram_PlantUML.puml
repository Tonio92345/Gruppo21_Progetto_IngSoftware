@startuml

top to bottom direction

package com.mycompany.progetto_ing_soft.app{
    
    class Calculator{
        + void start()
        + void {static} main
    }

    class StackComplex{
        - Stack<ComplexNumber> stack
        - Variables var
        + StackComplex()
        + void checkOperation(String operator, GridPane variables_pane)
        + void addNumToStack(ComplexNumber c)
        + ComplexNumber removeNum()
        + void topNum()
        + void clear()
        + void drop()
        + void dup()
        + void swap()
        + void over()
        + Stack<ComplexNumber> getStack()
        + Variables getVariables()
    }

    class Variables{
        - ComplexNumber var[]
        - StackComplex stack
        + Variables(StackComplex stack)
        + void saveVar(char let)
        + void saveNum(char let)
        + void addVar(char let)
        + void subVar(char let)
        + void getVar(char let)
    }

    class ComplexNumber{
        - double real_part
        - double imaginary_part
        + ComplexNumber(double real_part)
        + ComplexNumber(double real_part, double imaginary_part)
        + ComplexNumber addComp(ComplexNumber n1, ComplexNumber n2)
        + ComplexNumber subComp(ComplexNumber n1, ComplexNumber n2)
        + ComplexNumber multComp(ComplexNumber n1, ComplexNumber n2)
        + ComplexNumber divComp(ComplexNumber n1, ComplexNumber n2)
        + ComplexNumber sqrtComp(ComplexNumber n1)
        + ComplexNumber signInversionComp(ComplexNumber n1)
        + String toString()
        + double getReal_part()
        + double getImmaginary_part()
        + boolean equals()
        + int hashCode()
    }

    class CalculatorController{
        - ObservableList<ComplexNumber> stackView
        - StackComplex implementedStack
        - @FXML ListView<ComplexNumber> stack
        - @FXML GridPane variables
        - @FXML Label text
        - @FXML Label error
        + void initialize(URL url, ResourceBundle rb)
        - void buttonPressed(ActionEvent e)
    }

    class Application{
    }
}

package com.mycompany.progetto_ing_soft.exceptions{

    class NotInitializedVarException{
        + NotInitializedException()
        + NotInitializedException(String msg)
    }

    class StackEmptyException{
        + StackEmptyException()
        + StackEmptyException(String msg)
    }

    class OneElementStackException{
        + OneElementStackException()
        + OneElementStackException(String msg)
    }

    class InvalidInputException{
        + InvalidInputException()
        + InvalidInputException(String msg)
    }

    class DivisionByZeroException{
        + DivisionByZeroException()
        + DivisionByZeroException(String msg)
    }

    class Exception{
    }

    NotInitializedVarException <--- StackComplex : throws
    StackEmptyException <--- StackComplex : throws
    StackEmptyException <--- StackComplex : throws
    OneElementStackException <--- StackComplex : throws
    DivisionByZeroException <--- StackComplex : throws
    InvalidInputException <-- CalculatorController : throws
    
    Application <|-- Calculator
    Exception <|-- NotInitializedVarException
    Exception <|-- StackEmptyException
    Exception <|-- OneElementStackException
    Exception <|-- InvalidInputException
    Exception <|-- DivisionByZeroException
}

@enduml
